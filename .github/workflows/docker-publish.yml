name: Docker Build and Publish

on:
  push:
    branches: ["main"]
    paths: 
      - 'Dockerfiles/**'
      - 'config/**'
    tags: ['v*.*.*'] 
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io  
  IMAGE_NAME: ${{ github.repository }}  # <account>/<repo>

jobs:
  build:  # Combined build job for all Dockerfiles
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:  # Build matrix for different Dockerfiles
      matrix:
        dockerfile: 
          - Dockerfiles/Dockerfile     
          - Dockerfiles/Node.Dockerfile  
          - Dockerfiles/Go.Dockerfile    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign 
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2  # Add QEMU for multi-platform builds

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.dockerfile | replace('Dockerfiles/', '') | replace('.Dockerfile', '') }}  # Dynamic image name based on Dockerfile

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.dockerfile | replace('Dockerfiles/', '') | replace('.Dockerfile', '') }}:latest 
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64  # Build for multiple platforms
          
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
