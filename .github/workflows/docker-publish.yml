name: Docker Build and Publish

on:
  push:
    branches: ["main"]
    paths: 
      - 'Dockerfiles/**'
      - 'config/**'
    tags: ['v*.*.*'] 
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io  
  IMAGE_NAME: ${{ github.repository }}  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        dockerfile: 
          - Dockerfiles/Dockerfile     
          - Dockerfiles/Node.Dockerfile  
          - Dockerfiles/Go.Dockerfile    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign 
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set Image Name
        run: |
          short_name=$(echo ${{ matrix.dockerfile }} | sed 's/Dockerfiles\///' | sed 's/.Dockerfile//' | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_WITH_VARIANT=${{ env.IMAGE_NAME }}-$short_name" >> $GITHUB_ENV  

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WITH_VARIANT }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WITH_VARIANT }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WITH_VARIANT }}:latest

      - name: Delete old package versions for base
        uses: smartsquaregmbh/delete-old-packages@v0.7.0
        with:
          type: container
          names: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WITH_VARIANT }}
          keep: 5
